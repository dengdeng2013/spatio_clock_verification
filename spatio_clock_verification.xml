<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
//Global clocks
 // in 1/scale seconds
chan No_change_claim_agr, Set_spacing_c, Lane_change_suc, No_turn_left ; 
broadcast chan  Claiming_req, Change_claim_agr, Turn_left, Potentialcol, Reserving;
chan priority  Change_claim_agr , No_change_claim_agr&lt;Claiming_req&lt;Turn_left;
chan priority No_turn_left&lt;Reserving&lt;Potentialcol;
bool changed_lane_flag,spacing_done;
const int t_waitmax :=4;
const int t_waitmin :=1;
const int t_lc :=10;
const int C_len:=2;

typedef int[-1,1] RangeD;	// direction range

const int nb_lane := 3;	// number of lanes, including junction (&gt;= 2)

const int nb_car := 6;	// number of vehicles (&gt;= 2)
typedef int[0,nb_car-1] CarID;// ids range
const int init_posX[nb_car] := {20,30,0,0,25,15};	// initial longitudinal position for each vehicle in 1/scale meters
const int init_V[nb_car] := {20,20,20,20,20,20};	// initial longitudinal speed for each vehicle in 1/scale meters per second
const int init_A[nb_car] := {0,0,0,0,0,0};	// initial longitudinal acceleration for each vehicle in 1/scale meters per second squared

typedef int[0,nb_lane] LaneID;//lanes range

struct{
int posX;	// longitudinal position of the car (environment)
//int posY;	// lateral position of the car (environment)
int speed;	// longitudinal speed (environment)
int acceleration;	// longitudinal acceleration (controller)
RangeD direction;	// lateral speed (controller)
LaneID reserved;
LaneID goal;// signal to other vehicles the lane this vehicle is trying to reach (controller)
}carID[nb_car]={{20,20,0,0,1,2},{30,20,0,0,1,1},{0,20,0,0,1,1},{0,20,0,0,2,2},{25,20,0,0,2,2},{15,20,0,0,0,0}};
//carID[6]={{20,20,0,0,1,2},{30,20,0,0,1,1},{0,20,0,0,1,1},{0,20,0,0,2,2},{25,20,0,0,2,2},{15,20,0,0,0,0}};
const CarID ego=0;
const CarID ego_front=1;
const CarID ego_behind=2;
const CarID ego_claim_behind=3;
const CarID ego_claim_front=4;
const CarID ego_adjacent=5;

struct{
LaneID goal[nb_car-1];	// keeps other vehicles' goal
//RangeDelay delay[nb_car-1];	// keeps other vehicles' delay
}data[nb_car];
int[0,nb_car] c;
void noAcc(int c){
carID[c].acceleration:=0;
}

bool collisioncheck(int c){
return  c!=ego 
and carID[c].reserved==carID[ego].reserved and (carID[c].posX&gt;carID[ego].posX+C_len or carID[ego].posX&gt;carID[c].posX+C_len);
}

bool potentialcc(int c){
return c!=ego and 
carID[c].reserved==carID[ego].goal or carID[c].goal==carID[ego].goal
and (carID[c].posX&lt;carID[ego].posX+C_len or carID[ego].posX&gt;carID[c].posX-C_len);
}

void claim(int n){
if (n&lt;=nb_lane-1&amp;&amp;n&gt;=0)
carID[ego].goal:= n;
}

void wd_claim(){
int i;
for(i:int[0,nb_lane-1]){
if(carID[ego].goal==i)carID[ego].goal:=nb_lane;
}
}

void reservation(LaneID m){
if(carID[ego].goal==m){
carID[ego].reserved:=m;
carID[ego].goal:=nb_lane;}
}

void wd_reservation(int laneid){
int i;
for(i:int[0,nb_lane-1])
{
if(carID[ego].reserved==i and carID[ego].goal==laneid){
carID[ego].reserved:=laneid;
carID[ego].goal:=nb_lane;}
}
}
</declaration>
	<template>
		<name x="5" y="5">Ego</name>
		<parameter>CarID id1,CarID id2,CarID id3,LaneID n</parameter>
		<declaration>// Place local declarations here.
//int n,l;
//int lane;
//LaneID n=2;
clock x0;
</declaration>
		<location id="id0" x="-1088" y="-272">
			<name x="-1079" y="-289">ego_reserved</name>
		</location>
		<location id="id1" x="-977" y="-178">
			<name x="-1037" y="-161">lane_change_suc</name>
		</location>
		<location id="id2" x="-663" y="-178">
			<name x="-688" y="-161">potentialcheck</name>
		</location>
		<location id="id3" x="-807" y="-323">
			<name x="-875" y="-315">failed_to_change</name>
		</location>
		<location id="id4" x="-484" y="-365">
			<name x="-544" y="-416">waiting_for_lane_agr</name>
			<label kind="invariant" x="-494" y="-348">x0&lt;=t_waitmax</label>
		</location>
		<location id="id5" x="-680" y="-450">
			<urgent/>
		</location>
		<location id="id6" x="-867" y="-450">
			<name x="-901" y="-493">claiming</name>
			<label kind="invariant" x="-926" y="-527">collisioncheck(id1)</label>
		</location>
		<location id="id7" x="-1096" y="-374">
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-901" y="-221">!potentialcc(id2)&amp;&amp;
!potentialcc(id3)</label>
			<label kind="assignment" x="-892" y="-170">changed_lane_flag=true</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-1054" y="-255">Reserving!</label>
			<label kind="assignment" x="-1096" y="-212">reservation(n)</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-1130" y="-348">No_turn_left!</label>
			<label kind="assignment" x="-1092" y="-323">x0:=0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-663" y="-357">x0&gt;t_waitmax</label>
			<label kind="synchronisation" x="-722" y="-391">No_change_claim_agr?</label>
			<label kind="assignment" x="-723" y="-331">changed_lane_flag=false</label>
			<nail x="-663" y="-357"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id7"/>
			<label kind="assignment" x="-960" y="-374">wd_claim(),x0:=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-807" y="-280">potentialcc(id2)or
potentialcc(id3)</label>
			<label kind="synchronisation" x="-782" y="-229">Potentialcol!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-527" y="-255">x0&gt;=t_waitmin</label>
			<label kind="synchronisation" x="-552" y="-229">Change_claim_agr?</label>
			<nail x="-484" y="-178"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-807" y="-476">n&lt;=nb_lane</label>
			<label kind="synchronisation" x="-807" y="-501">Claiming_req!</label>
			<label kind="assignment" x="-816" y="-442">claim(n),x0:=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-1045" y="-476">carID[0].reserved&lt;n&amp;&amp;
carID[0].posX==20</label>
			<label kind="synchronisation" x="-1054" y="-425">Turn_left!</label>
		</transition>
	</template>
	<template>
		<name>EgoFront</name>
		<parameter>CarID id1</parameter>
		<declaration>clock x1;</declaration>
		<location id="id8" x="-263" y="8">
			<name x="-314" y="25">lane_claim_disagr</name>
		</location>
		<location id="id9" x="-527" y="-85">
			<name x="-595" y="-68">no_acceleration</name>
		</location>
		<location id="id10" x="-297" y="-93">
			<name x="-357" y="-127">lane_claim_agr</name>
		</location>
		<location id="id11" x="34" y="-195">
			<name x="-59" y="-246">lane_change_decision</name>
			<label kind="invariant" x="-25" y="-170">x1&lt;=t_waitmax</label>
		</location>
		<location id="id12" x="-280" y="-263">
			<name x="-331" y="-305">receive_lane_change</name>
		</location>
		<location id="id13" x="-527" y="-263">
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-204" y="-289">collisioncheck(id1)</label>
			<label kind="synchronisation" x="-195" y="-263">Claiming_req?</label>
			<label kind="assignment" x="-170" y="-221">x1:=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="assignment" x="-509" y="-21">changed_lane_flag=false</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-161" y="-17">x1&gt;t_waitmax</label>
			<label kind="synchronisation" x="-204" y="-59">No_change_claim_agr!</label>
			<nail x="-85" y="-34"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id13"/>
			<label kind="assignment" x="-569" y="-195">noAcc(id1)</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="assignment" x="-476" y="-85">changed_lane_flag=true</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-204" y="-170">x1&gt;=t_waitmin</label>
			<label kind="synchronisation" x="-204" y="-127">Change_claim_agr!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-459" y="-289">Turn_left?</label>
		</transition>
	</template>
	<template>
		<name>EgoBehind</name>
		<parameter>CarID id1</parameter>
		<declaration>clock x2;</declaration>
		<location id="id14" x="-238" y="51">
			<name x="-280" y="68">no_acceleration</name>
		</location>
		<location id="id15" x="-8" y="-127">
			<name x="-18" y="-161">waiting_agree</name>
		</location>
		<location id="id16" x="-221" y="-127">
			<name x="-297" y="-178">receive_lane_change</name>
		</location>
		<location id="id17" x="-382" y="-127">
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id14"/>
			<target ref="id17"/>
			<label kind="assignment" x="-364" y="-38">noAcc(id1)</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-220" y="-55">Change_claim_agr?</label>
			<label kind="assignment" x="-170" y="0">x2:=0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-203" y="-161">collisioncheck(id1)</label>
			<label kind="synchronisation" x="-195" y="-119">Claiming_req?</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-364" y="-148">Turn_left?</label>
		</transition>
	</template>
	<template>
		<name>ClaimBehind</name>
		<parameter>CarID id1</parameter>
		<declaration>clock x3;</declaration>
		<location id="id18" x="-807" y="-68">
			<name x="-867" y="-52">no_acceleration</name>
		</location>
		<location id="id19" x="-603" y="-195">
			<name x="-613" y="-229">reserved</name>
			<urgent/>
		</location>
		<location id="id20" x="-603" y="-68">
			<name x="-620" y="-51">decision</name>
		</location>
		<location id="id21" x="-374" y="-255">
			<name x="-384" y="-289">waiting_agree</name>
		</location>
		<location id="id22" x="-603" y="-255">
			<name x="-654" y="-297">receive_lane_change</name>
		</location>
		<location id="id23" x="-807" y="-255">
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id18"/>
			<target ref="id23"/>
			<label kind="assignment" x="-875" y="-178">spacing_done:=false,
noAcc(id1),x3:=0</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-739" y="-102">Potentialcol?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id23"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-603" y="-161">Reserving?</label>
			<label kind="assignment" x="-603" y="-136">spacing_done:=true,
x3:=0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-467" y="-195">Change_claim_agr?</label>
			<label kind="assignment" x="-459" y="-144">spacing_done:=false</label>
			<nail x="-382" y="-68"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-518" y="-280">Claiming_req?</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-748" y="-289">Turn_left?</label>
		</transition>
	</template>
	<template>
		<name>ClaimFront</name>
		<parameter>CarID id1</parameter>
		<declaration>clock x4;</declaration>
		<location id="id24" x="-246" y="8">
			<name x="-256" y="-26">reserved</name>
			<urgent/>
		</location>
		<location id="id25" x="-413" y="124">
			<name x="-447" y="141">no_acceleration</name>
		</location>
		<location id="id26" x="-416" y="-68">
		</location>
		<location id="id27" x="-175" y="124">
			<name x="-187" y="144">decision</name>
		</location>
		<location id="id28" x="12" y="124">
			<urgent/>
		</location>
		<location id="id29" x="17" y="-68">
			<name x="-30" y="-115">waiting_agree</name>
		</location>
		<location id="id30" x="-195" y="-68">
			<name x="-258" y="-115">receive_lane_change</name>
		</location>
		<init ref="id26"/>
		<transition>
			<source ref="id24"/>
			<target ref="id26"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-204" y="25">Reserving?</label>
			<label kind="assignment" x="-195" y="51">spacing_done:=true,
x4:=0</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="assignment" x="-442" y="25">spacing_done:=false,
noAcc(id1),x4:=0</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-328" y="98">Potentialcol?</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-68" y="-34">Change_claim_agr?</label>
			<label kind="assignment" x="-59" y="17">spacing_done:=false</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-153" y="-93">Claiming_req?</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-331" y="-93">Turn_left?</label>
		</transition>
	</template>
	<template>
		<name>Adjacent</name>
		<parameter>CarID id1</parameter>
		<declaration>clock x5;</declaration>
		<location id="id31" x="-994" y="-314">
			<name x="-1004" y="-348">no_turn_left</name>
		</location>
		<location id="id32" x="-1122" y="-229">
			<name x="-1207" y="-212">no_acceleration</name>
		</location>
		<location id="id33" x="-952" y="-391">
			<name x="-1003" y="-442">receive_lane_change</name>
		</location>
		<location id="id34" x="-943" y="-221">
			<name x="-986" y="-204">adjacent_decision</name>
		</location>
		<location id="id35" x="-739" y="-391">
			<name x="-749" y="-425">waiting_agree</name>
		</location>
		<location id="id36" x="-1122" y="-391">
		</location>
		<init ref="id36"/>
		<transition>
			<source ref="id31"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="-1070" y="-369">No_turn_left?</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-1003" y="-272">Reserving?</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id36"/>
			<label kind="assignment" x="-1173" y="-306">noAcc(id1)</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-1088" y="-221">Potentialcol?</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="-901" y="-416">Claiming_req?</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-1079" y="-416">Turn_left?</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="-867" y="-323">Change_claim_agr?</label>
			<label kind="assignment" x="-858" y="-289">x5:=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Process = Template();
e1=Ego(1,3,4,2);
e2=EgoFront(1);
e3=EgoBehind(2);
c1=ClaimBehind(3);
c2=ClaimFront(4);
a1=Adjacent(5);
// List one or more processes to be composed into a system.
system e1,e2,e3,c1,c2,a1;
    </system>
	<queries>
		<query>
			<formula>A&lt;&gt;(e1.claiming&amp;&amp;e2.lane_change_decision)imply(e1.lane_change_suc)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e1.lane_change_suc)imply(c1.reserved&amp;&amp;c2.reserved)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>(e1.lane_change_suc &amp;&amp; e2.lane_claim_agr) --&gt;(e2.no_acceleration&amp;&amp;e3.no_acceleration&amp;&amp;c1.no_acceleration&amp;&amp;c2.no_acceleration&amp;&amp;a1.no_acceleration)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt;(e1.claiming&amp;&amp;e2.lane_claim_agr)imply(e2.no_acceleration&amp;&amp;e3.no_acceleration &amp;&amp;c1.no_acceleration&amp;&amp;c2.no_acceleration&amp;&amp;a1.no_acceleration) 
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>e1.lane_change_suc--&gt;(e2.no_acceleration&amp;&amp;e3.no_acceleration&amp;&amp;c1.no_acceleration&amp;&amp;c2.no_acceleration&amp;&amp;a1.no_acceleration)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (e1.claiming &amp;&amp; e2.lane_claim_agr) imply a1.no_turn_left
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e1.waiting_for_lane_agr&amp;&amp;e2.lane_claim_disagr) imply e1.failed_to_change
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; (e1.waiting_for_lane_agr &amp;&amp; e2.lane_claim_agr) imply e1.potentialcheck
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;(e1.failed_to_change imply  (e1.x0&gt;4))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e2.lane_change_decision imply ( e2.x1&lt;=4))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e2.lane_claim_agr imply (e2.x1&gt;=1))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e2.lane_claim_disagr imply (e2.x1&gt;4))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e1.potentialcheck imply (e1.x0&gt;=1))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](e1.waiting_for_lane_agr imply(e1.x0&lt;=4))
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
